class Solution {
    public boolean isFrequencyRight(String s,int[] digitFrequency) {
        int common = 0;
        for(int i=0;i<10;i++){
            if(digitFrequency[i] == 0){
                continue;
            }
            if(common == 0 && digitFrequency[i] != 0){
                common = digitFrequency[i];
            }
            if(common!=digitFrequency[i]){
                return false;
            }
        }
        return true;
    }

    public int equalDigitFrequency(String s) {
        HashMap<String, Integer> map = new HashMap<>();
        int res = 0;
        String subString="";
        for (int i = 0; i < s.length(); i++) {
            int[] digitFrequency = new int[10];
            for (int j = i; j < s.length(); j++) {
                digitFrequency[s.charAt(j)-'0']++;
                subString = s.substring(i,j+1);
                if(isFrequencyRight(subString,digitFrequency)){
                    if(map.get(subString) == null){
                        res++;
                        map.put(subString, 1);
                    }
                }
            }
        }
        return res;
    }
}